;/*!
;   @file
;
;   @ingroup fapi
;
;   @brief VioRegister
;
;   (c) osFree Project 2021, <http://www.osFree.org>
;   for licence see licence.txt in root directory, or project website
;
;   This is Family API implementation for DOS, used with BIND tools
;   to link required API
;
;   @author Yuri Prokushev (yuri.prokushev@gmail.com)
;
;   Documentation: http://osfree.org/doku/en:docs:fapi:vioregister
;
;    0         NO_ERROR
;    349       ERROR_VIO_INVALID_MASK
;    403       ERROR_VIO_INVALID_ASCIIZ
;    426       ERROR_VIO_REGISTER
;    430       ERROR_VIO_ILLEGAL_DURING_POPUP
;    465       ERROR_VIO_DETACHED
;    494       ERROR_VIO_EXTENDED_SG
;
;*/

.8086

		INCLUDE	VIO.INC

_TEXT		SEGMENT BYTE PUBLIC 'CODE' USE16

		EXTERN	DOSLOADMODULE: FAR
		EXTERN	DOSGETPROCADDR: FAR
		EXTERN	@INIT_STACK : NEAR
		EXTERN	@DONE : NEAR

		PUBLIC	VIOREGISTER

ARGS		STRUC
OLDBP		DW	?		;place to store old BP
RETADDR		DD	?               ;Return address
FUNCTIONMASK2 	DD	?		;FUNCTION MASK 2
FUNCTIONMASK1	DD	?		;FUNCTION MASK 1
ENTRYPOINT	DD	?		;ENTRY POINT NAME
MODULENAME	DD	?		;MODULE NAME
ARGS		ENDS

OBJNAMEBUFL	EQU	255		; Object name buffer size

ARG_SIZE	EQU	(SIZE ARGS - 6)

VIOREGISTER		PROC	FAR
		MOV	AX, OBJNAMEBUFL
		CALL	@INIT_STACK

		LES	SI, [DS:BP]-OBJNAMEBUFL	;Object name buffer (returned)
		PUSH	ES
		PUSH	SI
		MOV	AX, OBJNAMEBUFL		;Length of object name buffer
		PUSH	AX

		LES	SI, [DS:BP].ARGS.MODULENAME		;Module name string
		PUSH	ES
		PUSH	SI
		LES	SI, DWORD PTR AVSHANDLE		;Module handle (returned)
		PUSH	ES
		PUSH	SI
		CALL	DOSLOADMODULE
		JNZ	ERROREXIT

		MOV	AX, AVSHANDLE		;Module handle
		PUSH	AX
		LES	SI, [DS:BP].ARGS.ENTRYPOINT		;Procedure name string
		PUSH	ES
		PUSH	SI
		LES	SI, AVSMAIN		;Procedure address (returned)
		PUSH	ES
		PUSH	SI
		CALL	DOSGETPROCADDR
		JNZ	ERROREXIT

		MOV	AX, WORD PTR [DS:BP].ARGS.FUNCTIONMASK1
		MOV	WORD PTR VIOFUNCTIONMASK1, AX
		MOV	AX, WORD PTR [DS:BP].ARGS.FUNCTIONMASK1+2
		MOV	WORD PTR VIOFUNCTIONMASK1+2, AX
		MOV	AX, WORD PTR [DS:BP].ARGS.FUNCTIONMASK2
		MOV	WORD PTR VIOFUNCTIONMASK2, AX
		MOV	AX, WORD PTR [DS:BP].ARGS.FUNCTIONMASK2+2
		MOV	WORD PTR VIOFUNCTIONMASK2+2, AX
		JMP	EXIT
ERROREXIT:
		MOV	AX, 426			; ERROR_VIO_REGISTER
EXIT:
		CALL	@DONE
		RET	ARG_SIZE+OBJNAMEBUFL
VIOREGISTER	ENDP

_TEXT		ENDS
		END

